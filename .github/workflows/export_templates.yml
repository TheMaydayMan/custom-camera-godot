name: Build Godot Export Templates

# Workflow is manually triggered via workflow_dispatch (allows manual runs on any branch):contentReference[oaicite:0]{index=0}
on:
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    name: Build Linux Export Templates
    steps:
      - name: Checkout Godot source
        uses: actions/checkout@v3

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            python3-pip build-essential pkg-config \
            libx11-dev libxcursor-dev libxinerama-dev \
            libgl1-mesa-dev libglu1-mesa-dev \
            libasound2-dev libpulse-dev libudev-dev \
            libxi-dev libxrandr-dev libwayland-dev
          python3 -m pip install scons
        # Install Linux build libraries (X11, audio, etc.):contentReference[oaicite:1]{index=1}

      - name: Build Linux templates
        run: |
          scons platform=linuxbsd target=template_release -j$(nproc)
          scons platform=linuxbsd target=template_debug -j$(nproc)
        # Build Linux release & debug export templates (32-bit & 64-bit):contentReference[oaicite:2]{index=2}

      - name: Package Linux templates
        run: |
          mkdir export
          cp bin/* export/
        # Collect built Linux templates

      - uses: actions/upload-artifact@v3
        with:
          name: export-templates-linux
          path: export

  build-windows:
    runs-on: windows-latest
    name: Build Windows Export Templates
    steps:
      - name: Checkout Godot source
        uses: actions/checkout@v3

      - name: Install SCons
        run: pip install scons

      - name: Build Windows templates
        run: |
          scons platform=windows target=template_release arch=x86_64
          scons platform=windows target=template_debug arch=x86_64
        # Build Windows release & debug export templates:contentReference[oaicite:3]{index=3}

      - name: Package Windows templates
        run: |
          mkdir export
          copy "bin\\*.exe" export\
        shell: cmd

      - uses: actions/upload-artifact@v3
        with:
          name: export-templates-windows
          path: export

  build-macos:
    runs-on: macos-latest
    name: Build macOS Export Templates
    steps:
      - name: Checkout Godot source
        uses: actions/checkout@v3

      - name: Install SCons
        run: brew install scons

      - name: Build macOS templates
        run: |
          scons platform=macos target=template_release arch=arm64 generate_bundle=yes
          scons platform=macos target=template_release arch=x86_64 generate_bundle=yes
          scons platform=macos target=template_debug arch=arm64 generate_bundle=yes
          scons platform=macos target=template_debug arch=x86_64 generate_bundle=yes
        # Build macOS (ARM & Intel) release & debug export templates:contentReference[oaicite:4]{index=4}

      - name: Package macOS templates
        run: |
          mkdir export
          cp -R bin/* export/

      - uses: actions/upload-artifact@v3
        with:
          name: export-templates-macos
          path: export

  build-html5:
    runs-on: ubuntu-latest
    name: Build HTML5 (Web) Export Templates
    steps:
      - name: Checkout Godot source
        uses: actions/checkout@v3

      - name: Setup Emscripten
        uses: mymindstorm/setup-emsdk@v14
        with:
          version: latest

      - name: Build Web templates
        run: |
          scons platform=web target=template_release -j$(nproc)
          scons platform=web target=template_debug -j$(nproc)
        # Build HTML5/Web export templates:contentReference[oaicite:5]{index=5}

      - name: Package Web templates
        run: |
          mkdir export
          cp bin/* export/

      - uses: actions/upload-artifact@v3
        with:
          name: export-templates-web
          path: export

  build-android:
    runs-on: ubuntu-latest
    name: Build Android Export Templates
    steps:
      - name: Checkout Godot source
        uses: actions/checkout@v3

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: 'latest'
          accept-android-sdk-licenses: true

      - name: Install SCons
        run: python3 -m pip install scons

      - name: Build Android templates
        run: |
          scons platform=android target=template_release arch=arm32
          scons platform=android target=template_release arch=arm64 generate_apk=yes
          scons platform=android target=template_debug arch=arm32
          scons platform=android target=template_debug arch=arm64 generate_apk=yes
        # Build Android release & debug templates (ARM32 & ARM64):contentReference[oaicite:6]{index=6}

      - name: Package Android templates
        run: |
          mkdir export
          cp bin/android_*.apk export/

      - uses: actions/upload-artifact@v3
        with:
          name: export-templates-android
          path: export

  build-ios:
    runs-on: macos-latest
    name: Build iOS Export Templates
    steps:
      - name: Checkout Godot source
        uses: actions/checkout@v3

      - name: Install SCons
        run: brew install scons

      - name: Build iOS templates
        run: |
          scons platform=ios target=template_release generate_bundle=yes
          scons platform=ios target=template_debug generate_bundle=yes
        # Build iOS release & debug export templates:contentReference[oaicite:7]{index=7}

      - name: Package iOS templates
        run: |
          mkdir export
          cp -R bin/* export/

      - uses: actions/upload-artifact@v3
        with:
          name: export-templates-ios
          path: export

  package:
    runs-on: ubuntu-latest
    needs:
      - build-linux
      - build-windows
      - build-macos
      - build-html5
      - build-android
      - build-ios
    name: Package All Export Templates
    steps:
      - name: Download Linux templates
        uses: actions/download-artifact@v3
        with:
          name: export-templates-linux
          path: combined

      - name: Download Windows templates
        uses: actions/download-artifact@v3
        with:
          name: export-templates-windows
          path: combined

      - name: Download macOS templates
        uses: actions/download-artifact@v3
        with:
          name: export-templates-macos
          path: combined

      - name: Download Web templates
        uses: actions/download-artifact@v3
        with:
          name: export-templates-web
          path: combined

      - name: Download Android templates
        uses: actions/download-artifact@v3
        with:
          name: export-templates-android
          path: combined

      - name: Download iOS templates
        uses: actions/download-artifact@v3
        with:
          name: export-templates-ios
          path: combined

      - name: Combine and zip all templates
        run: |
          mkdir output
          cp -R combined/* output/
          zip -r export_templates.tzp output
        # Package all built export templates into a single TPZ (zip) file:contentReference[oaicite:8]{index=8}

      - name: Upload TPZ artifact
        uses: actions/upload-artifact@v3
        with:
          name: export_templates_tzp
          path: export_templates.tzp
